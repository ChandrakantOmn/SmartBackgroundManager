buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply from: 'versions.gradle'

ext {
    bintrayRepo = 'leanback'
    bintrayName = 'SmartBackgroundManager'

    publishedGroupId = 'uz.pentoligy.leanback'
    libraryName = 'SmartBackgroundManager'
    artifact = 'smartbackgroundmanager'

    libraryDescription = 'Background Manager for Android TV Leanback with blur support'

    siteUrl = 'https://github.com/pentoligy/SmartBackgroundManager'
    gitUrl = 'https://github.com/pentoligy/SmartBackgroundManager.git'

    libraryVersion = '1.0'

    developerId = 'pentology'
    developerName = 'Sanjar Khodjaev'
    developerEmail = 'pentoligyone@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts { archives sourcesJar }

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}

android {
    compileSdkVersion versions.android.compileSdk

    defaultConfig {
        minSdkVersion versions.android.minSdk
        targetSdkVersion versions.android.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.androidx.testRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidx.testEspresso"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    compileOnly "androidx.leanback:leanback:$versions.androidx.common"

    compileOnly "io.reactivex.rxjava2:rxandroid:$versions.reactiveX.rxAndroid"
    compileOnly "io.reactivex.rxjava2:rxjava:$versions.reactiveX.rxJava"
}
